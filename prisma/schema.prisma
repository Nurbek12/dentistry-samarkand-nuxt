// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Stock {
  id Int @id @default(autoincrement())
  name String?
  name_ru String
  name_uz String
  
  description_ru String
  description_uz String

  image String?
  thumb String?

  content String
  discount Int

  start_date String
  end_date String
  publish Boolean @default(false)

  // services Service[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Specialty {
  id Int @id @default(autoincrement())
  name String?
  image String?
  thumb String?
  
  name_ru String
  name_uz String

  doctors Doctor[]
  publish Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Doctor {
  id Int @id @default(autoincrement())
  name String
  image String?
  thumb String?
  
  speciality Specialty[]
  reviews Review[]

  experience String
  education String
  content String

  rating Int

  phone String?
  tg String
  inst String
  fb String
  in String
  publish Boolean @default(true)

  appointments Appointment[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Service_Category {
  id Int @id @default(autoincrement())
  name String?
  name_ru String
  name_uz String

  image String?
  thumb String?

  publish Boolean @default(false)

  services Service[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Service {
  id Int @id @default(autoincrement())
  
  image String?
  thumb String?
  name_ru String
  name_uz String

  description_ru String?
  description_uz String?

  category_id Int
  category Service_Category @relation(fields: [category_id], references: [id])

  // equitie Stock[]
  // equipments Equipment[]
  contents Content[]

  price Int
  publish Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model FAQs {
  id Int @id @default(autoincrement())
  
  title_ru String
  title_uz String?
  content_ru String?
  content_uz String?
  publish Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Appointment {
  id Int @id @default(autoincrement())

  name String
  phone String
  doctor_id Int?
  doctor Doctor? @relation(references: [id], fields: [doctor_id])
  
  check Boolean @default(false)
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Review {
  id Int @id @default(autoincrement())

  firstname String
  lastname String?
  message String
  publish Boolean @default(false)
  rate Int?

  doctor_id Int?
  doctor Doctor? @relation(fields: [doctor_id], references: [id])
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Admin {
  id Int @id @default(autoincrement())
  
  login String
  password String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model News {
  id Int @id @default(autoincrement())

  title String
  description String
  image String
  thumb String
  date String
  publish Boolean @default(true)

  content String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Equipment {
  id Int @id @default(autoincrement())

  images String[]
  title String
  description String
  publish Boolean @default(true)

  // services Service[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Gallery {
  id Int @id @default(autoincrement())

  title String
  type String?
  cover String
  thumb String?
  images String[]
  video String?
  publish Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Laboratory {
  id Int @id @default(autoincrement())
  name String
  image String?
  thumb String?

  experience String
  education String

  content String

  rating Int

  phone String?
  tg String
  inst String
  fb String
  in String
  publish Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Content {
  id Int @id @default(autoincrement())

  title String
  description String
  publish Boolean @default(true)

  serivce_id Int
  service Service @relation(fields: [serivce_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}

model Article {
  id Int @id @default(autoincrement())

  author String
  title String
  description String
  image String
  thumb String
  content String
  images String[]
  publish Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
}